#include <gtest/gtest.h>
#include "dataframe.h"

#define GT_TRUE(a) ASSERT_EQ((a), true)
#define GT_FALSE(a) ASSERT_EQ((a), false)
#define GT_EQUALS(a, b) ASSERT_EQ(a, b)
#define ASSERT_EXIT_ZERO(a) \
    ASSERT_EXIT(a(), ::testing::ExitedWithCode(0), ".*")

// Tests that adding a column to a schema puts it in the correct position
void schema_test_add_column() {
    // Create schema
    Schema s("II");
    GT_EQUALS(s.width(), 2);

    // Add new column to schema
    String col_name("name");
    s.add_column('B', &col_name);

    // assert new column is added with correct position, name, and type
    GT_EQUALS(s.width(), 3);
    GT_TRUE(col_name.equals(s.col_name(2)));
    GT_EQUALS(s.col_type(2), 'B');

    exit(0);
}

TEST(a4SubmittedTest5, testSchemaAddColumn) { ASSERT_EXIT_ZERO(schema_test_add_column); }

int main(int argc, char** argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
