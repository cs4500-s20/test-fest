#include <gtest/gtest.h>
#include "dataframe.h" 

#define GT_TRUE(a)   ASSERT_EQ((a),true)
#define GT_FALSE(a)  ASSERT_EQ((a),false)
#define GT_EQUALS(a, b)   ASSERT_EQ(a, b)
#define ASSERT_EXIT_ZERO(a)  \
  ASSERT_EXIT(a(), ::testing::ExitedWithCode(0), ".*")

/* Test for changing a value in a DataFrame */
void test() {
    //Sets up the schema and row
    Schema s("IIBBFFSS");
    Row r(s);
    r.set(0, 1);
    r.set(1, 2);
    r.set(2, true);
    r.set(3, false);
    r.set(4, (float)3.3);
    r.set(5, (float)4.4);
    String* s1 = new String("what");
    String* s2 = new String("who");
    r.set(6, s1);
    r.set(7, s2);

    //Initializes the dataframe with rows
    DataFrame df(s);
    for(size_t i = 0; i < 100; i++) {
        df.add_row(r);
    }

    //Confirms the expects sizes
    GT_EQUALS(df.ncols(), 8);
    GT_EQUALS(df.nrows(), 100);

    //Changes the original value and confirms
    df.set(1, 49, 6);
    GT_EQUALS(df.get_int(1, 49), 6);

    exit(0);
}

TEST(a4, t1){ ASSERT_EXIT_ZERO(test); }

int main(int argc, char **argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
