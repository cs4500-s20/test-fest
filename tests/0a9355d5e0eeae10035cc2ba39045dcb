#include "dataframe.h"
#include <gtest/gtest.h>

#define GT_TRUE(a) ASSERT_EQ((a), true)
#define GT_FALSE(a) ASSERT_EQ((a), false)
#define GT_EQUALS(a, b) ASSERT_EQ(a, b)
#define ASSERT_EXIT_ZERO(a) ASSERT_EXIT(a(), ::testing::ExitedWithCode(0), ".*")

void test() {
  Schema s("FFSSII");

  DataFrame df(s);
  Row r(df.get_schema());
  String* hello = new String("hello", 5);
  String* world = new String("world", 5);
  for (size_t i = 0; i < 100; i++) {
    r.set(0,(float) 5.5);
    r.set(0,(float) 8.4);
    r.set(1,(float) 12.5);
    r.set(2, hello);
    r.set(3,world);
    r.set(4,(int) 15);
    r.set(5,(int) 15);
    df.add_row(r);
  }
  GT_EQUALS(df.ncols(), 6);
  GT_EQUALS(df.nrows(), 100);
  
  exit(0);
}

TEST(a4, t1) { ASSERT_EXIT_ZERO(test); }

int main(int argc, char **argv) {
  testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}
