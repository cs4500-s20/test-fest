#include <gtest/gtest.h>
#include "dataframe.h"

#define GT_TRUE(a)   ASSERT_EQ((a),true)
#define GT_FALSE(a)  ASSERT_EQ((a),false)
#define GT_EQUALS(a, b)   ASSERT_EQ(a, b)
#define ASSERT_EXIT_ZERO(a)  \
  ASSERT_EXIT(a(), ::testing::ExitedWithCode(0), ".*")



// Test row functions
void test() {

  // Construct basic schema
  Schema s("BIFS");
  GT_EQUALS(s.width(), 4);
  GT_EQUALS(s.length(), 0);

  // Add named rows of same schema
  s.add_row(new String("rOne"));
  s.add_row(new String("rTwo"));
  s.add_row(new String("rThree"));
  s.add_row(new String("rFour"));

  // Check added at correct indexes
  GT_EQUALS(s.row_idx("rOne"), 0);
  GT_EQUALS(s.row_idx("rTwo"), 1);
  GT_EQUALS(s.row_idx("rThree"), 2);
  GT_EQUALS(s.row_idx("rFour"), 3);

  // Check names were transferred correctly
  GT_TRUE(!strcmp(s.row_name(0)->c_str(), "rOne"));
  GT_TRUE(!strcmp(s.row_name(1)->c_str(), "rTwo"));
  GT_TRUE(!strcmp(s.row_name(2)->c_str(), "rThree"));
  GT_TRUE(!strcmp(s.row_name(3)->c_str(), "rFour"));

  // Check schema updated
  GT_EQUALS(s.width(), 4);
  GT_EQUALS(s.length(), 4);

  exit(0);
}

TEST(a4, st4){ ASSERT_EXIT_ZERO(test); }

int main(int argc, char **argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
