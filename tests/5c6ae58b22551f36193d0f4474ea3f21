#include <gtest/gtest.h>
#include "dataframe.h" 

#define GT_TRUE(a)   ASSERT_EQ((a),true)
#define GT_FALSE(a)  ASSERT_EQ((a),false)
#define GT_EQUALS(a, b)   ASSERT_EQ(a, b)
#define ASSERT_EXIT_ZERO(a)  \
  ASSERT_EXIT(a(), ::testing::ExitedWithCode(0), ".*")

void testSchemaConstruction() {
  Schema sc("FBSIFBISI");
  String* favorites = new String("Favorite Fruits");
  sc.add_column('F', favorites);
  GT_EQUALS(sc.width(), 10);
  GT_TRUE(sc.col_name(9)->equals(favorites));
  String* orange = new String("Orange");
  sc.add_row(orange);
  String* apple = new String("Apple");
  sc.add_row(apple);
  GT_TRUE(sc.row_name(0)->equals(orange));
  GT_TRUE(sc.row_name(1)->equals(apple));
  exit(0);
}


TEST(a4, t2){ ASSERT_EXIT_ZERO(testSchemaConstruction); }

int main(int argc, char **argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}