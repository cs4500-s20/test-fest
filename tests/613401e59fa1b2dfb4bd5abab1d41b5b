#include "dataframe.h" 
#include <gtest/gtest.h>

#define GT_TRUE(a)   ASSERT_EQ((a),true)
#define GT_FALSE(a)  ASSERT_EQ((a),false)
#define GT_EQUALS(a, b) ASSERT_EQ(a, b)

#define ASSERT_EXIT_ZERO(a)  \
  ASSERT_EXIT(a(), ::testing::ExitedWithCode(0), ".*")

void test() 
{
  Schema s("II");
  DataFrame df(s);

  Row r(df.get_schema());
  for (size_t i = 0; i < 2; i++)
  {
      r.set(0, (int)i);
      r.set(1, (int)i + 1);
      df.add_row(r);
  }

  String *cname;
  char colName[16];
  for (int i = 0; i < 5; i++)
  {
      sprintf(colName, "col-%d", i);
      cname = new String(colName);
      Column *col = new IntColumn();
      int val = 100 * (i + 1);
      col->push_back(val);
      col->push_back(val + 1);
      df.add_column(col, cname);
  }
  
  //df.print_dataframe();
  GT_EQUALS(df.get_int((size_t)0,1), 1);
  exit(0);
}

TEST(a4, t1){ ASSERT_EXIT_ZERO(test); }

int main(int argc, char **argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
