#include <gtest/gtest.h>
#include "dataframe.h"

#define GT_TRUE(a)   ASSERT_EQ((a),true)
#define GT_FALSE(a)  ASSERT_EQ((a),false)
#define GT_EQUALS(a, b)   ASSERT_EQ(a, b)
#define ASSERT_EXIT_ZERO(a)  \
  ASSERT_EXIT(a(), ::testing::ExitedWithCode(0), ".*")

// TEST WITH a large number of columns
void test() {
  Schema s("I");

  DataFrame df(s);
  Row  r(df.get_schema());
  long iter = 0;
  for(size_t i = 0; i < 5; i++) {
    r.set(0,(int)i);
    df.add_row(r);
  }

  for(size_t j = 0; j < 500; j++) {
    IntColumn *c = new IntColumn(5, 1, 2, 3, 4, 5);
    df.add_column(c, nullptr);
  }
  std::cout << df.get_int((size_t)488,3) << "\n";


  GT_EQUALS(df.get_int((size_t)488,3), 4);
  exit(0);
}

TEST(a4, t1){ ASSERT_EXIT_ZERO(test); }

int main(int argc, char **argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
